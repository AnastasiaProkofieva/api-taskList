
services:

    #PHP Service Laravel Application
    app:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        container_name: ${DOCKER_APP_NAME}-app
        restart: unless-stopped
        working_dir: /var/www/
        tty: true
        volumes:
            - .:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - ${DOCKER_APP_NAME}

    #postgres
    db:
        image: postgres:16.6
        container_name: ${DOCKER_APP_NAME}-db
        environment:
            - POSTGRES_DATABASE=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - PGDATA=/var/lib/postgresql/data/pgdata/task_list
        volumes:
            - ./docker/pgdata:/var/lib/postgresql
        ports:
            - ${DB_CONTAINER_PORT}:${DB_PORT}
        networks:
            - ${DOCKER_APP_NAME}
#        deploy:
#            resources:
#                limits:
#                    cpus: '0.50'
#                    memory: 512M
#                reservations:
#                    cpus: '0.25'
#                    memory: 256M
        command: >
                postgres -c max_connections=1000
                         -c shared_buffers=256MB
                         -c effective_cache_size=768MB
                         -c maintenance_work_mem=64MB
                         -c checkpoint_completion_target=0.7
                         -c wal_buffers=16MB
                         -c default_statistics_target=100
#        healthcheck:
#                test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
#                interval: 30s
#                timeout: 10s
#                retries: 5
        restart: unless-stopped
#        tty: true
#        stdin_open: true



    #Nginx Service
    nginx:
        image: nginx:1.17-alpine
        container_name: ${DOCKER_APP_NAME}-nginx
        restart: unless-stopped
        tty: true
        ports:
            - ${DOCKER_NGINX_PORT}:80
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - ${DOCKER_APP_NAME}


networks:
    task-list:
        driver: bridge
volumes:
    pgdata:
        driver: local
